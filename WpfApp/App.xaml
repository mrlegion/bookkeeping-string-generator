<Application x:Class="WpfApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp"
             xmlns:vm="clr-namespace:WpfApp.ViewModels"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             StartupUri="Views/ShellWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Deeppurple.xaml" />
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lightgreen.xaml" />
                <ResourceDictionary>
                    <vm:ViewModelLocator x:Key="Locator" />
                </ResourceDictionary>
                <ResourceDictionary>
                    <Style TargetType="{x:Type Border}" x:Key="Hovered">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
                                <Setter Property="TextElement.Foreground" Value="WhiteSmoke"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Background" Value="{x:Null}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                        <Setter Property="BorderThickness" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                        <Setter Property="BorderThickness" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <!--Контекстное меню-->
                    <ContextMenu x:Key="ContextMenuDataGridMain">
                        <MenuItem Header="Просмотр" Command="{Binding ViewItemCommand, Mode=OneWay}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}">
                            <MenuItem.Icon>
                                <md:PackIcon Kind="Eye" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Редактирование" Command="{Binding EditItemCommand, Mode=OneWay}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}">
                            <MenuItem.Icon>
                                <md:PackIcon Kind="Edit" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Удалить" Command="{Binding DeleteItemCommand, Mode=OneWay}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}">
                            <MenuItem.Icon>
                                <md:PackIcon Kind="Delete" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </Application.Resources>
</Application>
